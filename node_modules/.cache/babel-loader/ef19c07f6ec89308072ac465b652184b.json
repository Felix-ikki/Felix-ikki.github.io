{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../App\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapExercisesPerDay = props => {\n  _s();\n\n  const {\n    dayString,\n    day,\n    setDay,\n    setExercisesLeft\n  } = props;\n  console.log(dayString);\n  const {\n    list,\n    setList\n  } = useContext(UserContext);\n\n  const handleClickDayButton = event => {\n    if (day === event.currentTarget.id) {\n      setDay(false);\n    } else {\n      setDay(event.currentTarget.id);\n    }\n  };\n\n  const hadleClickGreenButton = (movement, index) => {\n    if (day) {\n      const newList = { ...list\n      };\n      newList[movement][index].day = day;\n      setList(newList);\n      const newList2 = [];\n\n      for (let movement in list) {\n        for (let i = 0; i < list[movement].length; i++) {\n          if (list[movement][i].isClicked) {\n            newList2.push(list[movement][i]);\n          }\n        }\n      }\n\n      for (let i = 0; i < newList2.length; i++) {\n        if (!newList2[i].day) {\n          setExercisesLeft(true);\n          break;\n        } else {\n          setExercisesLeft(false);\n        }\n      }\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDay\",\n      children: dayString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDayExerciseContainer\",\n      children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === dayString && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"individualExercise\",\n          id: exercise.title,\n          sx: {\n            backgroundColor: exercise.isClicked ? \"rgb(15, 175, 15)\" : \"#90caf9\",\n            color: exercise.isClicked ? \"#fff\" : \"#000\"\n          },\n          onClick: () => hadleClickGreenButton(movement, index),\n          children: exercise.title\n        }, exercise.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this))\n      }, movement + \"Fragment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"buttonDayAdd\",\n        id: dayString,\n        onClick: handleClickDayButton,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          sx: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapExercisesPerDay, \"T7Za3K5Qn4ST0KBRieG3SfNKJkI=\");\n\n_c = MapExercisesPerDay;\nexport default MapExercisesPerDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapExercisesPerDay\");","map":{"version":3,"names":["React","useContext","UserContext","Button","AddIcon","MapExercisesPerDay","props","dayString","day","setDay","setExercisesLeft","console","log","list","setList","handleClickDayButton","event","currentTarget","id","hadleClickGreenButton","movement","index","newList","newList2","i","length","isClicked","push","Object","keys","map","exercise","title","backgroundColor","color"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js"],"sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../App\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport \"../App.css\";\n\nconst MapExercisesPerDay = (props) => {\n  const { dayString, day, setDay, setExercisesLeft } = props;\n\n  console.log(dayString);\n\n  const { list, setList } = useContext(UserContext);\n\n  const handleClickDayButton = (event) => {\n    if (day === event.currentTarget.id) {\n      setDay(false);\n    } else {\n      setDay(event.currentTarget.id);\n    }\n  };\n\n  const hadleClickGreenButton = (movement, index) => {\n    if (day) {\n      const newList = { ...list };\n      newList[movement][index].day = day;\n      setList(newList);\n\n      const newList2 = [];\n      for (let movement in list) {\n        for (let i = 0; i < list[movement].length; i++) {\n          if (list[movement][i].isClicked) {\n            newList2.push(list[movement][i]);\n          }\n        }\n      }\n      for (let i = 0; i < newList2.length; i++) {\n        if (!newList2[i].day) {\n          setExercisesLeft(true);\n          break;\n        } else {\n          setExercisesLeft(false);\n        }\n      }\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div className=\"calendarColumn\">\n      <div className=\"calendarDay\">{dayString}</div>\n      <div className=\"calendarDayExerciseContainer\">\n        {Object.keys(list).map((movement) => (\n          <React.Fragment key={movement + \"Fragment\"}>\n            {list[movement].map(\n              (exercise, index) =>\n                exercise.isClicked &&\n                exercise.day === dayString && (\n                  <Button\n                    variant=\"individualExercise\"\n                    key={exercise.title}\n                    id={exercise.title}\n                    sx={{\n                      backgroundColor: exercise.isClicked\n                        ? \"rgb(15, 175, 15)\"\n                        : \"#90caf9\",\n                      color: exercise.isClicked ? \"#fff\" : \"#000\",\n                    }}\n                    onClick={() => hadleClickGreenButton(movement, index)}\n                  >\n                    {exercise.title}\n                  </Button>\n                )\n            )}\n          </React.Fragment>\n        ))}\n        <Button\n          variant=\"buttonDayAdd\"\n          id={dayString}\n          onClick={handleClickDayButton}\n        >\n          <AddIcon sx={{ color: \"white\" }} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MapExercisesPerDay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}