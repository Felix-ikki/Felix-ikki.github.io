{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapExercisesPerDay = props => {\n  _s();\n\n  const {\n    dayString,\n    day,\n    setDay,\n    setExercisesLeft\n  } = props;\n  const {\n    list,\n    setList\n  } = useContext(UserContext);\n\n  const handleClickDayButton = event => {\n    if (day === event.currentTarget.id) {\n      setDay(false);\n    } else {\n      setDay(event.currentTarget.id);\n    }\n  };\n\n  const hadleClickGreenButton = (movement, index) => {\n    if (day) {\n      const newList = { ...list\n      };\n      newList[movement][index].day = day;\n      setList(newList);\n      const newList2 = [];\n\n      for (let movement in list) {\n        for (let i = 0; i < list[movement].length; i++) {\n          if (list[movement][i].isClicked) {\n            newList2.push(list[movement][i]);\n          }\n        }\n      }\n\n      ;\n\n      for (let i = 0; i < newList2.length; i++) {\n        if (!newList2[i].day) {\n          setExercisesLeft(true);\n          break;\n        } else {\n          setExercisesLeft(false);\n        }\n      }\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDay\",\n      children: dayString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDayExerciseContainer\",\n      children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === {\n          dayString\n        } && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"individualExercise\",\n          id: exercise.title,\n          sx: {\n            backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n            color: exercise.isClicked ? '#fff' : '#000'\n          },\n          onClick: () => hadleClickGreenButton(movement, index),\n          children: exercise.title\n        }, exercise.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this))\n      }, movement + \"Fragment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"buttonDayAdd\",\n        id: dayString,\n        onClick: handleClickDayButton,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }, this);\n};\n\n_s(MapExercisesPerDay, \"s5XuB1CK3VU5Kxw2P2SmJLUr3/g=\");\n\n_c = MapExercisesPerDay;\nexport default MapExercisesPerDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapExercisesPerDay\");","map":{"version":3,"names":["React","useContext","UserContext","Button","AddIcon","MapExercisesPerDay","props","dayString","day","setDay","setExercisesLeft","list","setList","handleClickDayButton","event","currentTarget","id","hadleClickGreenButton","movement","index","newList","newList2","i","length","isClicked","push","Object","keys","map","exercise","title","backgroundColor","color"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js"],"sourcesContent":["import React from 'react'\nimport { useContext} from 'react'\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css'\n\n\nconst MapExercisesPerDay = (props) => {\n\n        const {    dayString,\n            day,  \n            setDay,\n            setExercisesLeft} = props\n\n    const {list, setList} = useContext(UserContext);\n\n\n    const handleClickDayButton = (event) => {\n        if (day === event.currentTarget.id) {\n          setDay(false)\n        }\n        else {\n          setDay(event.currentTarget.id)\n        }\n      }\n    \n      const hadleClickGreenButton = (movement, index) => {\n        if (day) {\n          const newList = {...list};\n        newList[movement][index].day = day\n        setList(newList)\n    \n        const newList2 = []\n        for (let movement in list) {\n          for (let i = 0; i < list[movement].length; i++) {\n            if (list[movement][i].isClicked) {\n              newList2.push(list[movement][i])\n              }\n            }\n        };\n        for (let i = 0; i < newList2.length; i++) {\n          if (!newList2[i].day) {\n            setExercisesLeft(true);\n            break\n          }\n          else {\n            setExercisesLeft(false);\n          }\n        }\n        }\n        else {\n          return\n        }\n      }\n\n  return (\n\n     <div className='calendarColumn'>\n       <div className='calendarDay'>\n       {dayString}</div>\n         <div className='calendarDayExerciseContainer'>\n         {Object.keys(list).map(movement => \n     <React.Fragment key={movement + \"Fragment\"}>\n       {list[movement]\n           .map((exercise, index) => exercise.isClicked && \n           exercise.day === {dayString} &&\n           <Button variant='individualExercise'\n           key={exercise.title}\n           id={exercise.title}\n           sx={{\n             backgroundColor: exercise.isClicked\n             ? 'rgb(15, 175, 15)'\n             : '#90caf9',\n             color: exercise.isClicked\n             ? '#fff'\n             : '#000',\n           }} onClick={() => hadleClickGreenButton(movement, index)}>\n               {exercise.title}</Button>)}\n         </React.Fragment>)}\n           <Button variant='buttonDayAdd' id={dayString} onClick={handleClickDayButton}>\n             <AddIcon sx={{ color: 'white' }}/>\n           </Button>\n           </div>\n       </div>\n)\n}\n\nexport default MapExercisesPerDay"],"mappings":"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"},"metadata":{},"sourceType":"module"}