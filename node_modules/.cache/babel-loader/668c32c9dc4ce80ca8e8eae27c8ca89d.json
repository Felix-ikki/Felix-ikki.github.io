{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/CalendarWithExercises.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@mui/material';\nimport React from 'react';\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarWithExercises = props => {\n  _s();\n\n  const {\n    dayString,\n    indexOfRoutine\n  } = props;\n  const {\n    allRoutines\n  } = useContext(UserContext);\n  const [exerciseBannerOpen, setExerciseBannerOpen] = useState(false);\n  const [greenButtonClicked, setGreenButtonClicked] = useState(false);\n\n  const handleClickGreenButton = event => {\n    setGreenButtonClicked(event.currentTarget.id);\n  };\n\n  const handleCloseGreenButton = event => {\n    setGreenButtonClicked(false);\n  };\n\n  const handleDiscardClick = () => {\n    const newRoutine = [...routine];\n\n    for (let i = 0; i < newRoutine.length; i++) {\n      if (newRoutine[i].exercise === objectExercise.exercise) {\n        newRoutine.splice(i, 1);\n        setRoutine(newRoutine);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDay\",\n      children: dayString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDayExerciseContainer\",\n      children: allRoutines.map(routine => routine[0] === allRoutines[indexOfRoutine][0] && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: routine.map(exercise => exercise.day === dayString && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"individualExercise\",\n          id: exercise.title,\n          sx: {\n            backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n            color: exercise.isClicked ? '#fff' : '#000'\n          },\n          onClick: handleClickGreenButton,\n          children: exercise.exercise\n        }, 'routine' + indexOfRoutine + exercise.exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, 'routine' + routine + \"Fragment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarWithExercises, \"okIkGuvNpA/cehx0eR47z2tGGbo=\");\n\n_c = CalendarWithExercises;\nexport default CalendarWithExercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarWithExercises\");","map":{"version":3,"names":["Button","React","useContext","useState","UserContext","CalendarWithExercises","props","dayString","indexOfRoutine","allRoutines","exerciseBannerOpen","setExerciseBannerOpen","greenButtonClicked","setGreenButtonClicked","handleClickGreenButton","event","currentTarget","id","handleCloseGreenButton","handleDiscardClick","newRoutine","routine","i","length","exercise","objectExercise","splice","setRoutine","map","day","title","backgroundColor","isClicked","color"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/CalendarWithExercises.js"],"sourcesContent":["import { Button } from '@mui/material';\nimport React from 'react'\nimport { useContext, useState } from 'react'\nimport { UserContext } from '../App';\n\nconst CalendarWithExercises = (props) => {\n\n    const {dayString, indexOfRoutine} = props\n\n    const {allRoutines} = useContext(UserContext)\n    const [exerciseBannerOpen, setExerciseBannerOpen] = useState(false)\n    const [greenButtonClicked, setGreenButtonClicked] = useState(false)\n\n\n\n    const handleClickGreenButton = (event) => {\n        setGreenButtonClicked(event.currentTarget.id)\n    }\n\n    \n    const handleCloseGreenButton = (event) => {\n          setGreenButtonClicked(false)\n    }\n\n\n\n      const handleDiscardClick = () => {\n        const newRoutine = [...routine];\n    \n        for (let i = 0; i < newRoutine.length; i++) {\n          if (newRoutine[i].exercise === objectExercise.exercise) {\n          newRoutine.splice(i, 1)\n          setRoutine(newRoutine)\n        }\n      }\n    }\n\n    return (\n        <div className='calendarColumn'>\n            <div className='calendarDay'>\n            {dayString}\n            </div>\n\n            <div className='calendarDayExerciseContainer'>\n\n            {allRoutines.map(routine => \n            routine[0] === allRoutines[indexOfRoutine][0] &&\n            <React.Fragment key={'routine'+ routine + \"Fragment\"}>\n            {routine.map(exercise =>\n            exercise.day === dayString &&\n            \n                <Button variant='individualExercise'\n                key={'routine' + indexOfRoutine + exercise.exercise}\n                id={exercise.title}\n                sx={{\n                backgroundColor: exercise.isClicked\n                ? 'rgb(15, 175, 15)'\n                : '#90caf9',\n                color: exercise.isClicked\n                ? '#fff'\n                : '#000',\n                }} onClick={handleClickGreenButton}>\n                    {exercise.exercise}\n                </Button>)}\n                </React.Fragment>\n            )}\n            \n            </div>\n        </div>\n    )\n}\n\nexport default CalendarWithExercises"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EAErC,MAAM;IAACC,SAAD;IAAYC;EAAZ,IAA8BF,KAApC;EAEA,MAAM;IAACG;EAAD,IAAgBP,UAAU,CAACE,WAAD,CAAhC;EACA,MAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;;EAIA,MAAMW,sBAAsB,GAAIC,KAAD,IAAW;IACtCF,qBAAqB,CAACE,KAAK,CAACC,aAAN,CAAoBC,EAArB,CAArB;EACH,CAFD;;EAKA,MAAMC,sBAAsB,GAAIH,KAAD,IAAW;IACpCF,qBAAqB,CAAC,KAAD,CAArB;EACL,CAFD;;EAME,MAAMM,kBAAkB,GAAG,MAAM;IAC/B,MAAMC,UAAU,GAAG,CAAC,GAAGC,OAAJ,CAAnB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;MAC1C,IAAIF,UAAU,CAACE,CAAD,CAAV,CAAcE,QAAd,KAA2BC,cAAc,CAACD,QAA9C,EAAwD;QACxDJ,UAAU,CAACM,MAAX,CAAkBJ,CAAlB,EAAqB,CAArB;QACAK,UAAU,CAACP,UAAD,CAAV;MACD;IACF;EACF,CATC;;EAWF,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACI;MAAK,SAAS,EAAC,aAAf;MAAA,UACCb;IADD;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,8BAAf;MAAA,UAECE,WAAW,CAACmB,GAAZ,CAAgBP,OAAO,IACxBA,OAAO,CAAC,CAAD,CAAP,KAAeZ,WAAW,CAACD,cAAD,CAAX,CAA4B,CAA5B,CAAf,iBACA,QAAC,KAAD,CAAO,QAAP;QAAA,UACCa,OAAO,CAACO,GAAR,CAAYJ,QAAQ,IACrBA,QAAQ,CAACK,GAAT,KAAiBtB,SAAjB,iBAEI,QAAC,MAAD;UAAQ,OAAO,EAAC,oBAAhB;UAEA,EAAE,EAAEiB,QAAQ,CAACM,KAFb;UAGA,EAAE,EAAE;YACJC,eAAe,EAAEP,QAAQ,CAACQ,SAAT,GACf,kBADe,GAEf,SAHE;YAIJC,KAAK,EAAET,QAAQ,CAACQ,SAAT,GACL,MADK,GAEL;UANE,CAHJ;UAUG,OAAO,EAAElB,sBAVZ;UAAA,UAWKU,QAAQ,CAACA;QAXd,GACK,YAAYhB,cAAZ,GAA6BgB,QAAQ,CAACA,QAD3C;UAAA;UAAA;UAAA;QAAA,QAHH;MADD,GAAqB,YAAWH,OAAX,GAAqB,UAA1C;QAAA;QAAA;QAAA;MAAA,QAFC;IAFD;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH,CAjED;;GAAMhB,qB;;KAAAA,qB;AAmEN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}