{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/pages/DragExercises.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { useContext, useState, useEffect } from 'react';\nimport { useLocalStorage } from '../customHooks/useLocalStorage';\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close'; //ver que pija pasa con la fuente que no anda si la pongo en App.css\n//ver que pasa que tengo que clicekar 2 veces al next button una vez seleccionado toods los ejercicios para que me lleve a la next page,\n// tal vez poniendo el click handler de next button al tocar el green button \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DragExercises() {\n  _s();\n\n  const navigate = useNavigate();\n  const [day, setDay] = useState(false);\n  const {\n    list,\n    setList\n  } = useContext(UserContext);\n  const [nextClick, setNextClick] = useState('');\n  const [open, setOpen] = useState(true);\n  const [exercisesLeft, setExercisesLeft] = useState(0);\n\n  const handleClickDayButton = event => {\n    if (day === event.currentTarget.id) {\n      setDay(false);\n    } else {\n      setDay(event.currentTarget.id);\n    }\n  };\n\n  const hadleClickGreenButton = (movement, index) => {\n    if (day) {\n      const newList = { ...list\n      };\n      newList[movement][index].day = day;\n      setList(newList);\n    } else {\n      return;\n    }\n  };\n\n  const getExercisesLeft = () => {\n    const newList = [];\n\n    for (let movement in list) {\n      for (let i = 0; i < list[movement].length; i++) {\n        if (list[movement][i].isClicked) {\n          newList.push(list[movement][i]);\n        }\n      }\n    }\n\n    ;\n\n    for (let i = 0; i < newList.length; i++) {\n      if (!newList[i].day) {\n        setExercisesLeft(exercisesLeft + 1);\n        break;\n      } else {\n        setExercisesLeft(exercisesLeft - 1);\n      }\n    }\n  };\n\n  const navigateIfNoExercisesLeft = () => {\n    if (exercisesLeft === 0) {\n      console.log(exercisesLeft);\n      navigate('/SetReps');\n    } else {\n      return;\n    }\n  };\n\n  const handleNextClick = () => {\n    setNextClick(true);\n    setOpen(true);\n    getExercisesLeft();\n    navigateIfNoExercisesLeft();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"1600\",\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: '1em',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: 'Shadows Into Light, cursive',\n            fontSize: '3em',\n            fontWeight: '400',\n            marginTop: '1.5em',\n            color: 'primary.dark',\n            marginBottom: '0.5em'\n          },\n          children: \"Select exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"containerMovementButtons\",\n          children: Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: list[movement].map((exercise, index) => exercise.isClicked && !exercise.day && /*#__PURE__*/_jsxDEV(Button, {\n              className: \"buttonIndividualExercise\",\n              id: exercise.title,\n              sx: {\n                fontFamily: 'Lato, sans-serif',\n                fontSize: '0.8em',\n                backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                color: exercise.isClicked ? '#fff' : '#000',\n                borderRadius: '15px',\n                padding: '1em',\n                width: '10em',\n                boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                marginTop: '1em',\n                marginRight: '1em',\n                transition: '0.3s',\n                cursor: 'pointer',\n                '&:hover': {\n                  backgroundColor: '#bdb9b7'\n                }\n              },\n              onClick: () => hadleClickGreenButton(movement, index),\n              children: exercise.title\n            }, exercise.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 27\n            }, this))\n          }, movement + \"Fragment\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n            width: '100%',\n            backgroundColor: '#bdb9b7',\n            borderRadius: '15px',\n            padding: '1.5em 1em 1.5em 1em',\n            marginBottom: '4em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Monday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'monday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'monday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Tuesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'tuesday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'tuesday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Wednesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'wednesday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'wednesday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Thursday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'thursday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'thursday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Friday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'friday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'friday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Saturday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'saturday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'saturday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendarColumn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDay\",\n              children: \"Sunday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendarDayExerciseContainer\",\n              style: {\n                borderRight: 'none'\n              },\n              children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'sunday' && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"buttonIndividualExercise\",\n                  id: exercise.title,\n                  sx: {\n                    fontFamily: 'Lato, sans-serif',\n                    fontSize: '0.8em',\n                    backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n                    color: exercise.isClicked ? '#fff' : '#000',\n                    borderRadius: '15px',\n                    padding: '1em',\n                    width: '10em',\n                    boxShadow: '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                    marginTop: '1em',\n                    marginRight: 'auto',\n                    marginLeft: 'auto',\n                    transition: '0.3s',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: '#bdb9b7'\n                    }\n                  },\n                  onClick: () => hadleClickGreenButton(movement, index),\n                  children: exercise.title\n                }, exercise.title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 27\n                }, this))\n              }, movement + \"Fragment\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: '1em',\n                  width: '3px',\n                  borderRadius: '10px',\n                  marginRight: 'auto',\n                  marginLeft: 'auto',\n                  backgroundColor: '#4f5b62',\n                  '&:hover': {\n                    backgroundColor: 'rgb(15, 175, 15)'\n                  }\n                },\n                id: 'sunday',\n                onClick: handleClickDayButton,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  sx: {\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), day && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '30%',\n            backgroundColor: '#bdb9b7',\n            position: 'fixed',\n            top: '70px',\n            padding: '0em 1em 0em 1em',\n            right: '30px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginBottom: '0.3em',\n            borderRadius: '15px',\n            fontFamily: 'Lato, sans-serif',\n            fontSize: '1.3em'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [\"Select the exercises you want to add to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: '1em',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"buttonBig\",\n            sx: {\n              backgroundColor: 'primary.main',\n              fontFamily: 'Shadows Into Light, cursive',\n              fontSize: '3em',\n              fontWeight: '500',\n              width: '7em',\n              borderRadius: '20px',\n              marginRight: '1em'\n            },\n            onClick: () => navigate(-1),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"buttonBig\",\n            sx: {\n              backgroundColor: 'primary.main',\n              fontFamily: 'Shadows Into Light, cursive',\n              fontSize: '3em',\n              fontWeight: '500',\n              width: '7em',\n              borderRadius: '20px',\n              marginRight: '1em'\n            },\n            onClick: handleNextClick,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }, this), nextClick && exercisesLeft && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '95%',\n            position: 'fixed',\n            top: '70px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"filled\",\n              severity: \"error\",\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"close\",\n                color: \"inherit\",\n                size: \"small\",\n                onClick: () => {\n                  setOpen(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 21\n              }, this),\n              sx: {\n                marginBottom: 2\n              },\n              children: \"You must select at least one exercise to continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DragExercises, \"1EeJg957NmSoQYX5rEeaiwjXF5U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DragExercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragExercises\");","map":{"version":3,"names":["React","Navbar","Footer","Box","Container","Typography","useContext","useState","useEffect","useLocalStorage","UserContext","Button","AddIcon","useNavigate","Alert","IconButton","Collapse","CloseIcon","DragExercises","navigate","day","setDay","list","setList","nextClick","setNextClick","open","setOpen","exercisesLeft","setExercisesLeft","handleClickDayButton","event","currentTarget","id","hadleClickGreenButton","movement","index","newList","getExercisesLeft","i","length","isClicked","push","navigateIfNoExercisesLeft","console","log","handleNextClick","display","flexDirection","height","padding","alignItems","width","fontFamily","fontSize","fontWeight","marginTop","color","marginBottom","Object","keys","map","exercise","title","backgroundColor","borderRadius","boxShadow","marginRight","transition","cursor","justifyContent","marginLeft","borderRight","position","top","right"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/pages/DragExercises.js"],"sourcesContent":["import React from 'react'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { useContext, useState, useEffect } from 'react'\nimport { useLocalStorage } from '../customHooks/useLocalStorage'\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css'\nimport { useNavigate }  from 'react-router-dom';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport CloseIcon from '@mui/icons-material/Close';\n\n//ver que pija pasa con la fuente que no anda si la pongo en App.css\n\n//ver que pasa que tengo que clicekar 2 veces al next button una vez seleccionado toods los ejercicios para que me lleve a la next page,\n// tal vez poniendo el click handler de next button al tocar el green button \n\nexport default function DragExercises() {\n\n  const navigate = useNavigate();\n\n  const [day, setDay] = useState(false);\n  const {list, setList} = useContext(UserContext);\n  const [nextClick, setNextClick] = useState('');\n  const [open, setOpen] = useState(true);\n  const [exercisesLeft, setExercisesLeft] = useState(0)\n\n\n  const handleClickDayButton = (event) => {\n    if (day === event.currentTarget.id) {\n      setDay(false)\n    }\n    else {\n      setDay(event.currentTarget.id)\n    }\n  }\n\n  const hadleClickGreenButton = (movement, index) => {\n    if (day) {\n      const newList = {...list};\n    newList[movement][index].day = day\n    setList(newList)\n    }\n    else {\n      return\n    }\n  }\n\n  const getExercisesLeft = () => {\n    const newList = []\n    for (let movement in list) {\n      for (let i = 0; i < list[movement].length; i++) {\n        if (list[movement][i].isClicked) {\n          newList.push(list[movement][i])\n          }\n        }\n    };\n    for (let i = 0; i < newList.length; i++) {\n      if (!newList[i].day) {\n        setExercisesLeft(exercisesLeft + 1);\n        break\n      }\n      else {\n        setExercisesLeft(exercisesLeft - 1);\n      }\n    }\n  }\n\n\nconst navigateIfNoExercisesLeft = () => {\n  if (exercisesLeft === 0){\n    console.log(exercisesLeft)\n    navigate('/SetReps');\n  }\n  else {\n    return\n  }\n}\n\n  const handleNextClick = () => {\n    setNextClick(true);\n    setOpen(true);\n    getExercisesLeft();\n    navigateIfNoExercisesLeft();\n    }\n\n  return (\n    <>\n    <Navbar/>\n    <Container maxWidth=\"1600\" \n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: 'auto',\n    }}>\n      <Box sx={{ \n        padding: '1em',\n        display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: 'auto'\n        }}>\n          <Typography sx={{ \n            fontFamily: 'Shadows Into Light, cursive', \n            fontSize: '3em', \n            fontWeight: '400',\n            marginTop: '1.5em',\n            color: 'primary.dark',\n            marginBottom: '0.5em',\n            }}>\n               Select exercises</Typography>\n\n                  <Box className='containerMovementButtons'>\n                      {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          !exercise.day &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: '1em',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                    </Box>\n                    <Box sx={{ display: 'flex', flexDirection: 'row',\n                   justifyContent: 'space-around', width: '100%',\n                   backgroundColor: '#bdb9b7', borderRadius: '15px',\n                   padding: '1.5em 1em 1.5em 1em', marginBottom: '4em'}}>\n                    <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Monday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'monday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'monday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>\n                      </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Tuesday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'tuesday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'tuesday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>\n                      </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Wednesday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'wednesday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'wednesday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>\n                      </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Thursday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'thursday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'thursday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>\n                      </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Friday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'friday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'friday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>                      \n                        </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Saturday</div>\n                        <div className='calendarDayExerciseContainer'>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'saturday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'saturday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>                      \n                        </div>\n                      <div className='calendarColumn'>\n                      <div className='calendarDay'>\n                        Sunday</div>\n                        <div className='calendarDayExerciseContainer' style={{borderRight: 'none'}}>\n                        {Object.keys(list).map(movement => \n                    <React.Fragment key={movement + \"Fragment\"}>\n                      {list[movement]\n                          .map((exercise, index) => exercise.isClicked && \n                          exercise.day === 'sunday' &&\n                          <Button className='buttonIndividualExercise' \n                          key={exercise.title}\n                          id={exercise.title}\n                          sx={{\n                            fontFamily: 'Lato, sans-serif',\n                            fontSize: '0.8em',\n                            backgroundColor: exercise.isClicked\n                            ? 'rgb(15, 175, 15)'\n                            : '#90caf9',\n                            color: exercise.isClicked\n                            ? '#fff'\n                            : '#000',\n                            borderRadius: '15px',\n                            padding: '1em',\n                            width: '10em',\n                            boxShadow:  '10px 5px 10px rgba(0, 0, 0, 0.3)',\n                            marginTop: '1em',\n                            marginRight: 'auto',\n                            marginLeft: 'auto',\n                            transition: '0.3s',\n                            cursor: 'pointer',\n                            '&:hover': { \n                              backgroundColor: '#bdb9b7',\n                          },\n                          }} onClick={() => hadleClickGreenButton(movement, index)}>\n                              {exercise.title}</Button>)}\n                        </React.Fragment>)}\n                          <Button \n                          sx={{marginTop: '1em', width: '3px', borderRadius: '10px', marginRight: 'auto',\n                              marginLeft: 'auto', backgroundColor: '#4f5b62', \n                              '&:hover': { \n                                backgroundColor: 'rgb(15, 175, 15)',\n                      }}} id={'sunday'} onClick={handleClickDayButton}>\n                        <AddIcon sx={{ color: 'white' }}/></Button></div>                     \n                         </div>\n              </Box>\n\n              {day && \n              <Box \n              sx={{width: '30%', backgroundColor: '#bdb9b7', position: 'fixed', \n              top: '70px', padding: '0em 1em 0em 1em',\n              right: '30px',\n              marginLeft: 'auto',\n              marginRight: 'auto', \n              marginBottom: '0.3em', borderRadius: '15px',\n              fontFamily: 'Lato, sans-serif',\n              fontSize: '1.3em'}}> \n              <p style={{ display: 'inline-block'}}>\n                Select the exercises you want to add to <strong>{day}</strong>\n              </p>\n              </Box>}\n\n              <Box sx={{ padding: '1em',display: 'flex', flexDirection: 'row',\n              justifyContent: 'center', alignItems: 'center', width: 'auto'\n              }}>\n                <Button variant=\"contained\" className='buttonBig' \n                sx={{backgroundColor: 'primary.main',\n                fontFamily: 'Shadows Into Light, cursive',\n                fontSize: '3em',\n                fontWeight: '500',\n                width: '7em',\n                borderRadius: '20px',\n                marginRight: '1em',\n                }} onClick={ () => navigate(-1)}>Go Back</Button>\n                \n                <Button variant=\"contained\" className='buttonBig' \n                sx={{backgroundColor: 'primary.main',\n                fontFamily: 'Shadows Into Light, cursive',\n                fontSize: '3em',\n                fontWeight: '500',\n                width: '7em',\n                borderRadius: '20px',\n                marginRight: '1em',\n                }} onClick={handleNextClick} \n                >\n                Next</Button>\n              </Box>\n\n            {nextClick  && exercisesLeft &&  \n            <Box sx={{ width: '95%',\n                        position: 'fixed',\n                        top: '70px'}}>\n              <Collapse in={open}>\n                <Alert variant=\"filled\" severity=\"error\"\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setOpen(false)}}\n                    >\n                      <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>}\n                  sx={{ marginBottom: 2 }}\n                >\n                  You must select at least one exercise to continue\n                </Alert>\n                </Collapse>\n              </Box>}\n\n            </Box>\n        </Container>\n    <Footer/>\n    </>\n  )}"],"mappings":"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"},"metadata":{},"sourceType":"module"}