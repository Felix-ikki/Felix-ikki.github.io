{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js\";\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapExercisesPerDay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarColumn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDay\",\n      children: \"Monday\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarDayExerciseContainer\",\n      children: [Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === 'monday' && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"individualExercise\",\n          id: exercise.title,\n          sx: {\n            backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n            color: exercise.isClicked ? '#fff' : '#000'\n          },\n          onClick: () => hadleClickGreenButton(movement, index),\n          children: exercise.title\n        }, exercise.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this))\n      }, movement + \"Fragment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"buttonDayAdd\",\n        id: 'monday',\n        onClick: handleClickDayButton,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 6\n  }, this);\n};\n\n_c = MapExercisesPerDay;\nexport default MapExercisesPerDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapExercisesPerDay\");","map":{"version":3,"names":["React","Typography","useContext","useState","UserContext","Button","AddIcon","MapExercisesPerDay","Object","keys","list","map","movement","exercise","index","isClicked","day","title","backgroundColor","color","hadleClickGreenButton","handleClickDayButton"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/components/MapExercisesPerDay.js"],"sourcesContent":["import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport { useContext, useState } from 'react'\nimport { UserContext } from '../App';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport '../App.css'\n\n\nconst MapExercisesPerDay = () => {\n  return (\n\n     <div className='calendarColumn'>\n       <div className='calendarDay'>\n         Monday</div>\n         <div className='calendarDayExerciseContainer'>\n         {Object.keys(list).map(movement => \n     <React.Fragment key={movement + \"Fragment\"}>\n       {list[movement]\n           .map((exercise, index) => exercise.isClicked && \n           exercise.day === 'monday' &&\n           <Button variant='individualExercise'\n           key={exercise.title}\n           id={exercise.title}\n           sx={{\n             backgroundColor: exercise.isClicked\n             ? 'rgb(15, 175, 15)'\n             : '#90caf9',\n             color: exercise.isClicked\n             ? '#fff'\n             : '#000',\n           }} onClick={() => hadleClickGreenButton(movement, index)}>\n               {exercise.title}</Button>)}\n         </React.Fragment>)}\n           <Button variant='buttonDayAdd' id={'monday'} onClick={handleClickDayButton}>\n             <AddIcon sx={{ color: 'white' }}/>\n           </Button>\n           </div>\n       </div>\n)\n}\n\nexport default MapExercisesPerDay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,YAAP;;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;EAC/B,oBAEG;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,aAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGI;MAAK,SAAS,EAAC,8BAAf;MAAA,WACCC,MAAM,CAACC,IAAP,CAAYC,IAAZ,EAAkBC,GAAlB,CAAsBC,QAAQ,iBACnC,QAAC,KAAD,CAAO,QAAP;QAAA,UACGF,IAAI,CAACE,QAAD,CAAJ,CACID,GADJ,CACQ,CAACE,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,CAACE,SAAT,IAC1BF,QAAQ,CAACG,GAAT,KAAiB,QADS,iBAE1B,QAAC,MAAD;UAAQ,OAAO,EAAC,oBAAhB;UAEA,EAAE,EAAEH,QAAQ,CAACI,KAFb;UAGA,EAAE,EAAE;YACFC,eAAe,EAAEL,QAAQ,CAACE,SAAT,GACf,kBADe,GAEf,SAHA;YAIFI,KAAK,EAAEN,QAAQ,CAACE,SAAT,GACL,MADK,GAEL;UANA,CAHJ;UAUG,OAAO,EAAE,MAAMK,qBAAqB,CAACR,QAAD,EAAWE,KAAX,CAVvC;UAAA,UAWKD,QAAQ,CAACI;QAXd,GACKJ,QAAQ,CAACI,KADd;UAAA;UAAA;UAAA;QAAA,QAHH;MADH,GAAqBL,QAAQ,GAAG,UAAhC;QAAA;QAAA;QAAA;MAAA,QADK,CADD,eAmBE,QAAC,MAAD;QAAQ,OAAO,EAAC,cAAhB;QAA+B,EAAE,EAAE,QAAnC;QAA6C,OAAO,EAAES,oBAAtD;QAAA,uBACE,QAAC,OAAD;UAAS,EAAE,EAAE;YAAEF,KAAK,EAAE;UAAT;QAAb;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFH;AA8BD,CA/BD;;KAAMZ,kB;AAiCN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}