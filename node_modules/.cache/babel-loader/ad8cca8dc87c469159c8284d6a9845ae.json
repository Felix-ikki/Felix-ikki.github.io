{"ast":null,"code":"var _jsxFileName = \"/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/pages/Routine.js\";\nimport React from 'react';\nimport Footer from '../components/Footer';\nimport MapExercisesPerDay from '../components/MapExercisesPerDay';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routine = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendarColumn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendarDay\",\n        children: dayString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendarDayExerciseContainer\",\n        children: Object.keys(list).map(movement => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: list[movement].map((exercise, index) => exercise.isClicked && exercise.day === dayString && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"individualExercise\",\n            id: exercise.title,\n            sx: {\n              backgroundColor: exercise.isClicked ? 'rgb(15, 175, 15)' : '#90caf9',\n              color: exercise.isClicked ? '#fff' : '#000'\n            },\n            onClick: () => hadleClickGreenButton(movement, index),\n            children: exercise.title\n          }, exercise.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 12\n          }, this))\n        }, movement + \"Fragment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Routine;\nexport default Routine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routine\");","map":{"version":3,"names":["React","Footer","MapExercisesPerDay","Navbar","Routine","dayString","Object","keys","list","map","movement","exercise","index","isClicked","day","title","backgroundColor","color","hadleClickGreenButton"],"sources":["/Users/felixcenteno/Desktop/Programming/reactApp/gymbro/src/pages/Routine.js"],"sourcesContent":["import React from 'react'\nimport Footer from '../components/Footer'\nimport MapExercisesPerDay from '../components/MapExercisesPerDay'\nimport Navbar from '../components/Navbar'\n\nconst Routine = () => {\n  return (\n    <>\n        <Navbar/>\n        <div className='calendarColumn'>\n       <div className='calendarDay'>\n       {dayString}</div>\n         <div className='calendarDayExerciseContainer'>\n         {Object.keys(list).map(movement => \n     <React.Fragment key={movement + \"Fragment\"}>\n       {list[movement]\n           .map((exercise, index) => exercise.isClicked && \n           exercise.day === dayString &&\n           <Button variant='individualExercise'\n           key={exercise.title}\n           id={exercise.title}\n           sx={{\n             backgroundColor: exercise.isClicked\n             ? 'rgb(15, 175, 15)'\n             : '#90caf9',\n             color: exercise.isClicked\n             ? '#fff'\n             : '#000',\n           }} onClick={() => hadleClickGreenButton(movement, index)}>\n               {exercise.title}</Button>)}\n         </React.Fragment>)}\n            </div>\n         </div>\n         <Footer/>\n    </>\n    )\n}\n\nexport default Routine"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EACpB,oBACE;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACD;QAAK,SAAS,EAAC,aAAf;QAAA,UACCC;MADD;QAAA;QAAA;QAAA;MAAA,QADC,eAGC;QAAK,SAAS,EAAC,8BAAf;QAAA,UACCC,MAAM,CAACC,IAAP,CAAYC,IAAZ,EAAkBC,GAAlB,CAAsBC,QAAQ,iBACnC,QAAC,KAAD,CAAO,QAAP;UAAA,UACGF,IAAI,CAACE,QAAD,CAAJ,CACID,GADJ,CACQ,CAACE,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,CAACE,SAAT,IAC1BF,QAAQ,CAACG,GAAT,KAAiBT,SADS,iBAE1B,QAAC,MAAD;YAAQ,OAAO,EAAC,oBAAhB;YAEA,EAAE,EAAEM,QAAQ,CAACI,KAFb;YAGA,EAAE,EAAE;cACFC,eAAe,EAAEL,QAAQ,CAACE,SAAT,GACf,kBADe,GAEf,SAHA;cAIFI,KAAK,EAAEN,QAAQ,CAACE,SAAT,GACL,MADK,GAEL;YANA,CAHJ;YAUG,OAAO,EAAE,MAAMK,qBAAqB,CAACR,QAAD,EAAWE,KAAX,CAVvC;YAAA,UAWKD,QAAQ,CAACI;UAXd,GACKJ,QAAQ,CAACI,KADd;YAAA;YAAA;YAAA;UAAA,QAHH;QADH,GAAqBL,QAAQ,GAAG,UAAhC;UAAA;UAAA;UAAA;QAAA,QADK;MADD;QAAA;QAAA;QAAA;MAAA,QAHD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eA0BK,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QA1BL;EAAA,gBADF;AA8BD,CA/BD;;KAAMN,O;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}